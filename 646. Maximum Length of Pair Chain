class Solution {
    
    public int findLongestChain(int[][] pairs) {
        if(pairs.length==0)
            return 0;
        if(pairs.length==1)
            return 1;
        
        Arrays.sort(pairs, (a, b) -> a[0] - b[0]);
        
        int dp[]=new int[pairs.length];
        Arrays.fill(dp,1);
        int max=0;
        for(int i=1;i<pairs.length;i++)
        {
            for(int j=0;j<i;j++)
            {
                if(pairs[i][0] > pairs[j][1])
                    dp[i]=Math.max(dp[i], dp[j]+1);
            }
            max=Math.max(max,dp[i]);
        }
        
        return max;
    }
    
    static class Node implements Comparable<Node>
    {
        int x,y;
        Node(int a,int b)
        {
            this.x=a;
            this.y=b;
        }
        
        public int compareTo(Node obj)
        {
            return this.x-obj.x;
        }
    }
}
