/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>> list=new ArrayList<>();
        if (root == null)
            return list;

        Stack<TreeNode> s1 = new Stack<>();
        Stack<TreeNode> s2 = new Stack<>();

        s2.add(root);
        List<Integer> li=null;
        while (!s1.isEmpty() || !s2.isEmpty()) {
            
            if(!s1.isEmpty())
            {
                li=new ArrayList<>();
                list.add(li);
            }    
            while (!s1.isEmpty()) {
                TreeNode n = s1.pop();
                li.add(n.val);

                if (n.right != null)
                    s2.add(n.right);
                if (n.left != null)
                    s2.add(n.left);
            }

            if(!s2.isEmpty())
            {
                li=new ArrayList<>();
                list.add(li);
            }
            while (!s2.isEmpty()) {
                TreeNode n = s2.pop();
                li.add(n.val);

                if (n.left != null)
                    s1.add(n.left);
                if (n.right != null)
                    s1.add(n.right);
            }
        }
        return list;
    }
}
