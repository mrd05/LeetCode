/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    static int max_level=0;
    public List<Integer> rightSideView(TreeNode root) {
        
        List<Integer> list=new ArrayList<>();
        if(root==null)
            return list;
        
        max_level=0;
        //getRight(root,1,list);
        
        //using queue BFS
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        q.add(null);
        while(!q.isEmpty())
        {
            if(q.peek()!=null)
            {
                list.add(q.peek().val);
                while(q.peek()!=null)
                {
                    TreeNode n=q.poll();
                    if(n.right!=null)
                        q.add(n.right);
                    if(n.left!=null)
                        q.add(n.left);
                }
                q.add(null);
            }
            q.poll();
        }
        
        return list;
    }
    
    static void getRight(TreeNode root,int h,List<Integer> list)
    {
        if(root==null)
            return;
        
        if(h>max_level)
        {
            max_level=h;
            list.add(root.val);
        }
        
        getRight(root.right,h+1,list);
        getRight(root.left,h+1,list);
    }
}
