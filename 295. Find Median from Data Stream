class MedianFinder {

    PriorityQueue<Integer> left;
	PriorityQueue<Integer> right;
    
    /** initialize your data structure here. */
    public MedianFinder() {
        left = new PriorityQueue<>(Collections.reverseOrder());
        right = new PriorityQueue<>();
    }
    
    public void addNum(int num) {
        if (left.isEmpty()) {
			left.add(num);
        } 
        else {
                        
            if (!right.isEmpty() && num > right.peek()) {
                right.add(num);
                left.add(right.poll());
            } else {
                left.add(num);
            }
            if (left.size() > 1 + right.size())
                right.add(left.poll());

        }
    }
    
    public double findMedian() {
        if(left.size()>right.size())
            return left.peek();
        else
            return ((double)left.peek()+right.peek())/2;
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
