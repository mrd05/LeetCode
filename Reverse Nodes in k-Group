/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {

		if (k == 0)
			return head;
		ListNode cur = head;
		ListNode next, curHead = head, lastHead = null;
		ListNode prev = null;
		boolean flag = true;
		while (cur != null) {
			int n = 0;
			next = cur;
			while (next != null && n < k) {
				next = next.next;
				n++;
			}
			if (n < k)
				break;
			curHead = cur;
			prev = next;
			while (n > 0) {
				next = cur.next;
				cur.next = prev;
				prev = cur;
				cur = next;
				n--;
			}
			if (flag) {
				flag = false;
				head = prev;
			} else {
				lastHead.next = prev;
			}
			lastHead = curHead;
			curHead.next = next;

			cur = next;

		}

		return head;
	}
}
